stages:
        - building_images
        - deploy
sudo: required
language: generic
dist: xenial
branches:
  only:
        - gsoc2019-travis
before_script:
        - ./.travis/main.sh #configuration script for travis machine - upgrading docker and installing packages for arm architecture
        - export DOCKER_CLI_EXPERIMENTAL=enabled #enable experimental features
        - docker version #Check Docker 18.09 is installed
jobs:
  include:
        - stage: building_images

          ### x86 Docker images
          script:
          - DOCKER_BUILDKIT=1 docker build . -f docker/debian-ncp/Dockerfile -t ownyourbits/debian-ncp-amd64:latest --pull --build-arg arch=amd64 --build-arg arch_qemu=x86_64 > output
          - sed -i "/innodb_file_format=barracuda/a open_files_limit=65536" lamp.sh
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & DOCKER_BUILDKIT=1 docker build . -f docker/lamp/Dockerfile -t ownyourbits/lamp-amd64:latest --build-arg arch=amd64 > output
          - sed -i '/open_files_limit=65536/d' lamp.sh
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & DOCKER_BUILDKIT=1 docker build . -f docker/nextcloud/Dockerfile -t ownyourbits/nextcloud-amd64:latest --build-arg arch=amd64 > output
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & DOCKER_BUILDKIT=1 docker build . -f docker/nextcloudpi/Dockerfile -t ownyourbits/nextcloudpi-amd64:latest --build-arg arch=amd64 > output

        -
          ### armhf Docker images
          script: 
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done &
          - DOCKER_BUILDKIT=1 docker build . -f docker/debian-ncp/Dockerfile -t ownyourbits/debian-ncp-armhf:latest --pull --build-arg arch=armhf --build-arg arch_qemu=arm > output
          - sed -i "/innodb_file_format=barracuda/a open_files_limit=65536" lamp.sh
          - DOCKER_BUILDKIT=1 docker build . -f docker/lamp/Dockerfile -t ownyourbits/lamp-armhf:latest --build-arg arch=armhf > output
          - sed -i '/open_files_limit=65536/d' lamp.sh
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloud/Dockerfile -t ownyourbits/nextcloud-armhf:latest --build-arg arch=armhf > output
          - DOCKER_BUILDKIT=1 docker build . -f docker/nextcloudpi/Dockerfile -t ownyourbits/nextcloudpi-armhf:latest --build-arg arch=armhf > output

        -
          ### arm64v8 Docker images
          script:
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & DOCKER_BUILDKIT=1 docker build . -f docker/debian-ncp/Dockerfile -t ownyourbits/debian-ncp-arm64v8:latest --build-arg arch=arm64v8 --build-arg arch_qemu=aarch64 > output
          - sed -i "/innodb_file_format=barracuda/a open_files_limit=65536" lamp.sh
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & DOCKER_BUILDKIT=1 docker build . -f docker/lamp/Dockerfile -t ownyourbits/lamp-arm64v8:latest --build-arg arch=arm64v8 > output
          - sed -i '/open_files_limit=65536/d' lamp.sh
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & DOCKER_BUILDKIT=1 docker build . -f docker/nextcloud/Dockerfile -t ownyourbits/nextcloud-arm64v8:latest --build-arg arch=arm64v8 > output
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & DOCKER_BUILDKIT=1 docker build . -f docker/nextcloudpi/Dockerfile -t ownyourbits/nextcloudpi-arm64v8:latest --build-arg arch=arm64v8 > output

        -
          ### Raspbian rpi
          script:
          - sed -i "s/create_torrent/#create_torrent/" build-SD-rpi.sh
          - sed -i "s/upload_ftp/#upload_ftp/" build-SD-rpi.sh
          - while sleep 9m; do echo "=====[ $SECONDS seconds, build-docker still building... ]====="; done & ./build-SD-rpi.sh > output & tail -f output
          - ls /tmp

        -
          ### Raspbian berryboot
          script:
          - ls
        - stage: deploy
          script: ls

notifications:
        email: false
