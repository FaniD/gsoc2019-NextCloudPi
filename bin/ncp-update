#!/bin/bash

# update latest NextCloudPi code from github

{
  [ "$(id -u)" -ne 0 ] && { printf "Must be run as root. Try 'sudo $0'\n"; exit 1; }

  BRANCH="${1:-master}"
  [[ "$BRANCH" != "master" ]] && echo "INFO: updating to development branch '$BRANCH'"

  TMPDIR="$( mktemp -d /tmp/ncp-update.XXXXXX || ( echo "Failed to create temp dir. Exiting" >&2; exit 1 ) )"
  trap "cd /; rm -rf \"${TMPDIR}\"; exit 0" 0 1 2 3 15

  echo -e "Downloading updates"
  git clone --depth 20 -b "$BRANCH" -q https://github.com/nextcloud/nextcloudpi.git "$TMPDIR" || {
    echo "No internet connectivity"
    exit 1
  }

  a[[ -f /.ncp-image ]] || cd "$TMPDIR"         # update locally during build

  echo -e "Performing updates"

  #fix later. testing now to update versions before latest cleanup
  latest_checkpoint="1.10.11"
  MAJOR=1 #$( grep -oP "\d+\.\d+\.\d+" $latest_checkpoint | cut -d. -f1 )
  MINOR=10 #$( grep -oP "\d+\.\d+\.\d+" $latest_checkpoint | cut -d. -f2 )
  PATCH=11 #$( grep -oP "\d+\.\d+\.\d+" $latest_checkpoint | cut -d. -f3 )

  MAJ=$( grep -oP "\d+\.\d+\.\d+" /usr/local/etc/ncp-version | cut -d. -f1 )
  MIN=$( grep -oP "\d+\.\d+\.\d+" /usr/local/etc/ncp-version | cut -d. -f2 )
  PAT=$( grep -oP "\d+\.\d+\.\d+" /usr/local/etc/ncp-version | cut -d. -f3 )

  BACKWARDS_UPDATES=false

  if [ "$MAJOR" -gt "$MAJ" ]; then
    BACKWARDS_UPDATES=true
  elif [ "$MAJOR" -eq "$MAJ" ] && [ "$MINOR" -gt "$MIN" ]; then
    BACKWARDS_UPDATES=true
  elif [ "$MAJOR" -eq "$MAJ" ] && [ "$MINOR" -eq "$MIN" ] && [ "$PATCH" -gt "$PAT" ]; then
    BACKWARDS_UPDATES=true
  fi

  if $BACKWARDS_UPDATES ; then
    updates_list=(update_1_10_0_to_1_10_11_.sh update_1_10_12_to_1_13_2_.sh)

    for update_file in "${updates_list[@]}"; do
      MAJ=$(echo ${update_file} | cut -d'_' -f2)
      MIN=$(echo ${update_file} | cut -d'_' -f3)
      PAT=$(echo ${update_file} | cut -d'_' -f4)
      tag_update="v${MAJ}.${MIN}.${P}"
      git checkout ${tag_update}

      cp $update_file ./update.sh		#where is my updates folder?

      ./update.sh || exit 1
    done
  else
    ./update.sh || exit 1
  fi

  cd "$TMPDIR"
  VER=$( git describe --always --tags | grep -oP "v\d+\.\d+\.\d+" )

  # check format
  grep -qP "v\d+\.\d+\.\d+" <<< "$VER" || { "Error: missing version"; exit 1; }

  echo "$VER" > /usr/local/etc/ncp-version
  echo "$VER" > /var/run/.ncp-latest-version

  # write changelog
  git log --graph --oneline --decorate \
    --pretty=format:"[%D] %s" --date=short | \
    grep 'tag: v' | \
    sed '/HEAD ->\|origin/s|\[.*\(tag: v[0-9]\+\.[0-9]\+\.[0-9]\+\).*\]|[\1]|' | \
    sed 's|* \[tag: |[|' > /usr/local/etc/ncp-changelog

  echo -e "NextCloudPi updated to version $VER"
  exit 0
} # force to read the whole thing into memory, as its contents might change in update.sh
